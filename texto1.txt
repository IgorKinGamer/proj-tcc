> Introdução

Atualmente, 
arquiteturas seguem modelos hierárquicos
níveis de cache
no nível mais baixo dessas hierarquias, unidades de processamento
complexidade - multicore, multiprocessador, compartilhamento

A necessidade de plataformas para rodar aplicações de alto desempenho tem dado origem às diversas arquiteturas paralelas modernas existentes. Cada uma delas pode possuir uma hierarquia de memória e distinta. A localização dos núcleos em relação a essa hierarquia define a topologia da máquina.
A organização e demais características dos elementos dessa hierarquia são aspectos de muita relevância para o desempenho de aplicações.

Certas combinações de fatores da aplicação e da arquitetura podem resultar na melhoria ou na degradação do desempenho.
Tais fatores podem ser, por exemplo, a quantidade de dados manipulados e o tamanho das caches, que podem comportar ou não todos os dados simultaneamente, ou os padrões de troca de mensagens entre tarefas e a localização delas, além dos meios existentes para realizar essas comunicações, que podem resultar em maior ou menor eficiência.

Ainda, em arquiteturas NUMA, nas quais diferentes regiões da memória possuem diferentes tempos de acesso, é importante que haja proximidade entre os dados acessados por uma thread e o núcleo em que ela reside.
Portanto, é essencial o conhecimento da topologia da máquina, que possibilita o devido ajuste das aplicações a ela, de modo a aproveitar ao máximo os recursos disponíveis.

Disso vem a necessidade de haver alguma representação da topologia para fornecer as informações necessárias sobre ela, seja diretamente às aplicações ou a outras partes do sistema, que usarão tais informações para realizar otimizações estática ou dinamicamente. Como exemplos de uso estático, pode-se citar compilação de algoritmos com conhecimento da hierarquia [Sequoia]; e, quanto ao uso dinâmico, posicionamento de threads OpenMP [artigo], balanceamento de carga.

No entanto, a disponibilização de tais informações gera custos adicionais, além de que pode ter outras implicações que afetam o desempenho.
Assim, é necessário que haja um compromisso entre o tempo de acesso e o espaço ocupado pela representação utilizada.
Tempos de acesso muito grandes podem acabar anulando os ganhos das otimizações.
Já se as estruturas de dados forem muito espaçosas, pode ser que não possuam boa localidade espacial, dependendo dos dados referenciados em acessos consecutivos.
Isso pode resultar em perda de desempenho ocasionada por faltas de cache, tanto no acesso às informações da topologia, que estarão espalhadas em diversas linhas da cache, podendo ser substituídas com maior probabilidade, quanto no acesso aos dados pelas aplicações.
Entretanto, é possível que a adição de algumas informações facilitem certas consultas sobre a topologia sem causar tais prejuízos, que é o desejado.



Aplicações (científicas)
- Alto desempenho
- - Uso eficiente dos recursos
- - - Técnicas
- - - Conhecimento da topologia
A necessidade de plataformas para aplicações de alto desempenho
Diversas arquiteturas para HPC.
cada uma com uma hierarquia de memória.
característica muito relevante para o desempenho (deve ser levada em conta) ao desenvolver aplicações para elas (que rodam nelas).

Motivação

Objetivos

> Fundamentação teórica




> Trabalhos relacionados

hwloc predominante
- Representação
- - Vantagens?
- - - Modelagem (natural) que reflete
- Usado por ...

Várias ligações (ponteiros) entre elementos, conforme as suas relações.
- Para facilitar a navegação
cpusets

> 

Análise das funções do hwloc
Funções usadas no hieschella
Assimetria - Desconsiderar a princípio - Focar em simetria
Grandes quantidades de núcleos